{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/ForcastValues.ts","webpack:///src/app/Forcasting.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/details.ts","webpack:///src/app/forcast-service.service.ts","webpack:///src/app/incrementalsales-volume/incrementalsales-volume.component.ts","webpack:///src/app/incrementalsales-volume/incrementalsales-volume.component.html","webpack:///src/app/product1/product1.component.ts","webpack:///src/app/product1/product1.component.html","webpack:///src/app/product2/product2.component.ts","webpack:///src/app/product2/product2.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ForcastValues","Forcasting","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","opened","today","Date","time","getTime","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Details","ForcastServiceService","_Http","clicked","data","details","console","log","post","csvdata","loc","location","pro","product","providedIn","IncrementalsalesVolumeComponent","forcast","ngxCsvParser","userforms","totalsales","basevolume","incrementalsales","lift","tfv","productsarray","uniqueproductsarray","d","Number","week","ProductValue","LocationValue","jsonObj","tempdata","filter","f","push","productcatogery","forEach","c","includes","LocatHierachyNode","jsonObj2","date","startdate","enddate","date2","toFixed","SeasonalVolume","TotFactoredVolume","barChart","$event","files","srcElement","header","parse","delimiter","pipe","subscribe","result","arrayToJSONObject","error","csvRecords","newArr","slice","length","formatted","cols","l","i","o","j","jsondata","JSON","stringify","splice","n","getLocation","chart","type","title","text","xAxis","categories","yAxis","allowDecimals","min","plotOptions","column","stacking","tooltip","valueSuffix","series","name","undefined","color","fileChangeListener","onSubmit","Product1Component","newforcast","test","margin","top","right","bottom","left","n4","n5","width","height","enroll","temp1","temp2","temp3","temparray","forcast2","forcasting","Math","round","toString","testDate","weekInMilliseconds","setTime","d5","monthNames","maxds","getFullYear","getMonth","getDate","getDetails","barChartPopulation","maxd","UTC","plotLines","value","zoneAxis","zones","pointStart","Product2Component","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class ForcastValues {\r\n    public TotFactoredVolume:any;\r\n    public date:any;\r\n    constructor(\r\n    // public location:string,\r\n    // public products:string,\r\n   \r\n    // public  interval:string\r\n    ){}\r\n}\r\n","export class Forcasting {\r\n    public TotFactoredVolume:any;\r\n    public date:any;\r\n    constructor(\r\n\r\n    ){}\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IncrementalsalesVolumeComponent } from './incrementalsales-volume/incrementalsales-volume.component';\nimport { Product1Component } from './product1/product1.component';\nimport { Product2Component } from './product2/product2.component';\n\n\nconst routes: Routes = [\n  { path: 'Product1-component', component: Product1Component },\n  { path: 'incremantalsales', component:IncrementalsalesVolumeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Details } from './details';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\nopened=false;\n  public today=new Date();\n  public time= new Date().getTime;\n\n}","<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n\n  <meta name=\"viewport\" content=\"width=\n  , initial-scale=1.0\">\n  <title>Document</title>\n</head>\n\n<body style=\"background-color:rgb(230,247,255);\">\n\n\n  <div class=\" col-lg-1\" style=\"background-color: lightgray; height: 100%;\">\n    <div style=\"margin-top: 30VH!IMPORTANT;\">\n      <a [routerLink]=\"['/Product1-component']\" style=\"font-size: 17px;font-weight: 700;color: black;\">Time series\n        forecasting</a><br><br>\n      <a [routerLink]=\"['/incremantalsales']\" style=\"font-size: 17px;font-weight: 700;color: black;\">Incremental sales\n        volume</a>\n    </div>\n  </div>\n  <div class=\"charts col-lg-11\">\n    <br>\n    <div>\n\n\n      <div>\n\n        <div class=\"row\" style=\"margin-top: -20px;\">\n          <router-outlet ></router-outlet>\n\n\n        </div>\n      </div>\n    </div>\n  </div>\n\n</body>\n\n</html>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { MaterialModule } from './material/material.module';\nimport{MatSelectModule} from'@angular/material/select';\nimport{ MatFormFieldModule } from '@angular/material/form-field';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatInputModule} from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport{HttpClientModule} from '@angular/common/http'\nimport { NgxCsvParserModule } from 'ngx-csv-parser';\nimport { HighchartsChartModule } from 'highcharts-angular';\nimport { Product1Component } from './product1/product1.component';\nimport { Product2Component } from './product2/product2.component';\nimport { IncrementalsalesVolumeComponent } from './incrementalsales-volume/incrementalsales-volume.component';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Product1Component,\n    Product2Component,\n    IncrementalsalesVolumeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatInputModule,\n    FormsModule,\n    HttpClientModule,\n    NgxCsvParserModule,\n    MatSidenavModule,\n    HighchartsChartModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Details {\n    public data:number;\n    public location;\n    public product;\n   \n    constructor(\n\n    // public  interval:string\n    ){}\n}\n","import { Injectable } from '@angular/core';\nimport{HttpClient} from '@angular/common/http'\nimport { Details } from './details';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForcastServiceService {\n  details;\n  clicked=true;\n location;\n product;\n  \n  constructor(private _Http:HttpClient) { }\n\n  setDetails(data)\n  {\n    this.clicked=true;\n   this.details=data;\n\n  }\n  getDetails()\n  {\n    return this.details;\n  }\n  enroll(details:Details)\n  {\n    console.log(details,\"newApicheck\");\nreturn this._Http.post<any>(\"https://tpo-forecast.azure-api.net/prophet/score\",details)\n  }\n  setData(csvdata){\n\n  }\n  getClicked()\n  {\n    return this.clicked;\n  }\n  setLocation(loc)\n  {\n    this.location=loc;\n\n    console.log(this.location,\"service\")\n  }\n  getLocation()\n  {\n    return this.location;\n  }\n  setProduct(pro)\n  {\n   this.product=pro;\n   console.log(this.product,\"service2\")\n  }\n  getProduct()\n  {\n    return this.product;\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport { NgxCsvParser, NgxCSVParserError } from 'ngx-csv-parser';\nimport { Details } from '../details';\nimport { ForcastServiceService } from '../forcast-service.service';\n\n\n@Component({\n  selector: 'app-incrementalsales-volume',\n  templateUrl: './incrementalsales-volume.component.html',\n  styleUrls: ['./incrementalsales-volume.component.css']\n})\nexport class IncrementalsalesVolumeComponent implements OnInit {\n  public today=new Date();\n  public time= new Date().getTime;\n  ProductValue: any;\n  LocationValue: any;\n  tempdata: any;\n  jsonObj: any;\n  jsonObj2: any;\n  temp2: any;\n  l: any;\n  userforms=new Details();\n  newforcast: any;\n  week: number;\n  j: any;\n  header: boolean;\n  jsondata: string;\n  n: any;\n  startdate;\n  enddate;\ntotalsales=0;\nbasevolume=0;\nincrementalsales=0;\nlift=0;\ntfv=0;\nproductsarray:any[]=[];\nuniqueproductsarray:any[]=[];\n  constructor(private forcast:ForcastServiceService,private ngxCsvParser: NgxCsvParser) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit()\n  {\n    \n    var d= new Details();\n    d.data=Number(this.week);\n    d.product=this.ProductValue[0];\n    d.location =this.LocationValue[0];\n    this.jsonObj=this.tempdata;\n    this.jsonObj=this.tempdata;\n    this.jsonObj.filter((f)=>{this.productsarray.push(f.productcatogery)});\n    console.log(this.productsarray,\"productsarray\");\n    this.productsarray.forEach((c) => {\n      if (!this.uniqueproductsarray.includes(c)) {\n          this.uniqueproductsarray.push(c);\n      }\n  });\n  console.log(this.uniqueproductsarray,\"uparray\");\n  \n    this.jsonObj=this.jsonObj.filter((f)=>{return f.LocatHierachyNode == this.LocationValue && f.productcatogery == this.ProductValue});\n   this.jsonObj2=this.jsonObj.filter((f)=>{return f.LocatHierachyNode == this.LocationValue && f.productcatogery == this.ProductValue});//&& f.productcatogery ==\"100 ML Butterscotch\"\n this.jsonObj=this.jsonObj.filter((f)=>{return new Date(f.date)>= new Date(this.startdate) && new Date(f.date)<=new Date(this.enddate) });\n this.jsonObj.filter((f)=>{ console.log(f.date2);this.totalsales = this.totalsales+ Number(Number(f.date2).toFixed(2))});\n this.jsonObj.filter((f)=>{ console.log(f.SeasonalVolume);this.basevolume = this.basevolume+ Number(Number(f.SeasonalVolume).toFixed(2))});\n this.jsonObj.filter((f)=>{ console.log(f.TotFactoredVolume);this.tfv = this.tfv+ Number(Number(f.TotFactoredVolume).toFixed(2))});\n\nthis.incrementalsales=this.totalsales-this.basevolume;\nthis.lift=this.incrementalsales/this.basevolume;\nconsole.log(this.incrementalsales,\"insales\")\n console.log(this.tfv,\"totfacvol\");\n console.log(this.basevolume,\"basevol\");\n\n console.log(this.lift,\"totsales\");\n console.log(this.jsonObj,\"dates\");\n this.barChart();\n  \n  }\n\n\n\n  @ViewChild('fileImportInput') fileImportInput: any;\n\nfileChangeListener($event: any): void {\n\n  const files = $event.srcElement.files;\n  this.header = (this.header as unknown as string) === 'true' || this.header === true;\n\n  this.ngxCsvParser.parse(files[0], { header: this.header, delimiter: ',' })\n    .pipe().subscribe((result: Array<any>) => {\n      console.log('Result', result);\n      // this.csvRecords = result;\n      this.arrayToJSONObject(result);\n    }, (error: NgxCSVParserError) => {\n      console.log('Error', error);\n    });\n\n}\narrayToJSONObject (csvRecords){\n  //header\n  var keys = csvRecords[0];\n\n  //vacate keys from main array\n  var newArr = csvRecords.slice(1, csvRecords.length);\n\n  var formatted = [],\n  data = newArr,\n  cols = keys,\n  l = cols.length;\n  for (var i=0; i<data.length; i++) {\n          var d = data[i],\n                  o = {};\n          for (var j=0; j<l; j++)\n                  o[cols[j]] = d[j];\n          formatted.push(o);\n        \n  }\n \n//  this.location=this.forcast.getLocation();\n  this.jsondata=JSON.stringify(formatted);\n  console.log(data,\"test\") \n  this.jsonObj = JSON.parse(this.jsondata);\n  this.tempdata=this.jsonObj;\n  // this.jsonObj=this.jsonObj.filter((f)=>{f.Loacation ==\"Banjara hills\"})\n  this.jsonObj2=JSON.parse(this.jsondata);\n this.jsonObj.splice(0,this.jsonObj.length-this.n);\n this.jsonObj2.splice(0,this.jsonObj.length-this.n);\n console.log(this.jsonObj,\"datatest\");\n console.log(this.jsonObj,\"datatest\");\n console.log(this.forcast.getLocation(),\"datatest2\");\n\n}\nbarChart() {\n\n Highcharts.chart('barChart', {\n   chart: {\n    type: 'column'\n   },\n   \n   title: {\n     text: ''\n   },\n   xAxis: {\n    categories: ['Total Volume', 'Basic Decomposition', '']\n  \n},\nyAxis: {\n  allowDecimals: false,\n  min: 0,\n  title: {\n      text: ''\n  }\n},\n\nplotOptions: {\n  column: {\n      stacking: 'normal'\n  }\n},\n   tooltip: {\n     valueSuffix: ''\n   },\n   series: [{\n    name: 'Total Factored Volume',\n    type: undefined,\n    data: [this.tfv,0,0],\n    color:'red'\n}, {\n  name:'Incremental Sales',\n  type: undefined,\n  data: [0,this.incrementalsales,0],\n   \n    color:'green'\n\n}, \n{\n  name:'Base Decomposition',\n  type: undefined,\n  data: [0,this.basevolume,0],\n    color:'blue'\n}\n]\n   \n   \n  \n });\n Highcharts.chart('barChart2', {\n  chart: {\n   type: 'column'\n  },\n  \n  title: {\n    text: ''\n  },\n  xAxis: {\n   categories: ['Lift']\n \n},\nyAxis: {\n allowDecimals: false,\n min: 0,\n title: {\n     text: ''\n }\n},\n\nplotOptions: {\n column: {\n     stacking: 'normal'\n }\n},\n  tooltip: {\n    valueSuffix: ''\n  },\n  series: [{\n   name: 'Lift (from promotion)',\n   type: undefined,\n   data: [this.lift],\n   color:'brown'\n}\n]\n  \n  \n \n});\n}\n}\n","<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n\n  <meta name=\"viewport\" content=\"width=\n      , initial-scale=1.0\">\n\n</head>\n\n<body>\n\n  <div class=\"title container-fluid\">\n    <div class=\"col-sm-3 col-md-6 col-lg-7 title_text\">Incremental sales volume</div>\n    <div class=\"col-5 title_date\"><span>Date: {{today | date:'dd-MM-yyyy '}}</span> <span\n        style=\"padding-left: 112px;\">Time: {{today | date:'hh:mm:ss a':'+0530'}}</span> </div>\n  </div>\n  <div class=\"charts col-lg-10\">\n    <br>\n    <div>\n      <input type=\"file\" name=\"FileUpload\" id=\"csvFileUpload\" (change)=\"fileChangeListener($event)\" accept=\".csv\"\n        #fileImportInput />\n      <div class=\"\">\n        <div class=\"row\">\n          <div style=\"margin: 30px;\">\n            <div id=\"barChart\" style=\"min-width: 600px; max-width: 1000px; height: 400px; margin: 0 auto;float: left;\">\n            </div>\n            <div id=\"barChart2\"\n              style=\"min-width: 200px; margin-left:101px!important;max-width: 1000px; height: 400px; margin: 0 auto;float: left;\">\n            </div>\n\n            <h5 class=\"card-title text-center\"></h5>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-2\" style=\"margin-right: 0%;position: relative;\n  left: -37px;\">\n    <div class=\"side_panel col-lg-2\">\n      <div style=\"margin-top: 50px; padding-right: 100px;\">\n        <span style=\"display: block;\n               width: max-content;font-size: 14px;\"> start date</span> <input type=\"date\" [(ngModel)]=\"startdate\">\n        <span style=\"display: block;\n               width: max-content;margin-top: 20px;font-size: 14px;\">End date</span> <input type=\"date\"\n          [(ngModel)]=\"enddate\">\n        <form #userform=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n          <mat-form-field style=\"font-size: 18px!important;\">\n            <mat-label style=\"font-size: 20px; margin-top: 10px;\">locations</mat-label>\n            <mat-select [(ngModel)]=\"LocationValue\" [(ngModel)]=\"userforms.location\" multiple name=\"locations\">\n              <mat-option value=\"Banjara hills\">Banjara hills</mat-option>\n              <mat-option value=\"KPHB\">KPHB</mat-option>\n              <mat-option value=\"Panjagutta\">Panjagutta</mat-option>\n            </mat-select>\n\n          </mat-form-field>\n          <mat-form-field style=\"font-size: 18px!important;\">\n\n            <mat-label style=\"font-size: 20px;\">Products</mat-label>\n            <mat-select [(ngModel)]=\"ProductValue\" [(ngModel)]=\"userforms.product\" multiple name=\"products\">\n              <mat-option value=\"100 ML Butterscotch\">ML Butterscotch</mat-option>\n              <mat-option value=\"250 ML Cornetto Snekers\">Cornetto Snekers</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <br><br>\n          <button class=\"btn btn-primary text-center\" type=\"submit\" style=\"margin-top: 10vh;\">Submit</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</body>\n\n</html>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { from } from 'rxjs';\nimport * as d3 from 'd3';\nimport * as d3Scale from 'd3';\nimport * as d3Shape from 'd3';\nimport * as d3Axis from 'd3';\nimport { NgxCsvParser, NgxCSVParserError } from 'ngx-csv-parser';\nimport * as Highcharts from 'highcharts';\nimport { Details } from '../details';\nimport { ForcastServiceService } from '../forcast-service.service';\nimport { ForcastValues } from '../ForcastValues';\nimport { Forcasting } from '../Forcasting';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n@Component({\n  selector: 'app-product1',\n  templateUrl: './product1.component.html',\n  styleUrls: ['./product1.component.css']\n})\nexport class Product1Component implements OnInit {\n\n\n  ngOnInit(): void {\n  }\n  n;\n  week;\n  maxdate;\n  j;\n  display;\n  l;\n  forcastDate;\n  newforcast: any[] = [];\n  test: any[] = [];\n  header = false;\n  public title = 'Line Chart';\n  public today = new Date();\n  public time = new Date().getTime;\n  LocationValue;\n  ProductValue;\n  forcastvalues: any[];\n  userforms = new Details();\n  csvRecords: any[] = [];\n  jsondata;\n  jsonObj: any[] = [];\n  jsonObj2: any[] = [];\n  private margin = { top: 20, right: 20, bottom: 30, left: 50 };\n  private width: number;\n  private height: number;\n  private x: any;\n  private y: any;\n  n4 = [];\n  n5 = [];\n  tempdata;\n  private svg: any;\n  n2: any[];\n  testing;\n  temp2;\n  temp3;\n  private line: d3Shape.Line<[number, number]>; // this is line defination\n  private line2: d3Shape.Line<[number, number]>;\n  constructor(private forcast: ForcastServiceService, private ngxCsvParser: NgxCsvParser) {\n    this.width = 1300 - this.margin.left - this.margin.right;\n    this.height = 600 - this.margin.top - this.margin.bottom;\n  }\n\n\n  onSubmit() {\n    var d = new Details();\n    d.data = Number(this.week);\n    d.product = this.ProductValue[0];\n    d.location = this.LocationValue[0];\n    this.jsonObj = this.tempdata;\n    this.jsonObj2 = this.tempdata;\n    this.jsonObj = this.jsonObj.filter((f) => { return f.LocatHierachyNode == this.LocationValue && f.productcatogery == this.ProductValue });\n    this.jsonObj2 = this.jsonObj2.filter((f) => { return f.LocatHierachyNode == this.LocationValue && f.productcatogery == this.ProductValue });\n    this.forcast.enroll(d).subscribe(data => {\n      console.log(data, \"test\")\n      console.log(data[1], \"test32\");\n      var temp1 = data[0];\n      this.temp2 = data[1];\n      this.temp3 = data[2];\n      this.l = data.length;\n      this.newforcast.push(this.jsonObj[this.jsonObj.length - 1]);\n      for (this.j = 0, this.week = 1; this.j < data[1].length; this.j++) {\n        let temparray;\n        var forcast2 = new ForcastValues();\n        var forcasting = new Forcasting();\n        forcasting.TotFactoredVolume = Math.round(temp1[this.j]).toString();\n        forcast2.TotFactoredVolume = Math.round(temp1[this.j]).toString();\n        var testDate = new Date(\"12-30-2019\");\n        var weekInMilliseconds = (7 * 24 * 60 * 60 * 1000) * this.week;\n\n        testDate.setTime(testDate.getTime() + weekInMilliseconds);\n        let d5 = testDate;\n\n        console.log(d5, \"d5date\")\n        const monthNames = [\"Jan\", \"Feb\", \"March\", \"Apr\", \"May\", \"June\",\n          \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"December\"\n        ];\n        var maxds: string = d5.getFullYear() + \"-\" + (monthNames[d5.getMonth()]) + \"-\" + d5.getDate();\n        console.log(testDate, \"date\")\n        forcast2.date = maxds;\n        forcasting.date = maxds;\n\n        this.newforcast.push(JSON.parse(JSON.stringify(forcasting)));\n        this.jsonObj.push(JSON.parse(JSON.stringify(forcasting)));\n        this.week++;\n      }\n\n      console.log(this.forcast.getDetails(), \"getDetails\")\n      this.barChartPopulation();\n\n    }, error => console.log('e', error));\n\n  }\n\n\n\n\n  @ViewChild('fileImportInput') fileImportInput: any;\n\n  fileChangeListener($event: any): void {\n\n    const files = $event.srcElement.files;\n    this.header = (this.header as unknown as string) === 'true' || this.header === true;\n\n    this.ngxCsvParser.parse(files[0], { header: this.header, delimiter: ',' })\n      .pipe().subscribe((result: Array<any>) => {\n        console.log('Result', result);\n        // this.csvRecords = result;\n        this.arrayToJSONObject(result);\n      }, (error: NgxCSVParserError) => {\n        console.log('Error', error);\n      });\n\n  }\n\n  arrayToJSONObject(csvRecords) {\n    //header\n    var keys = csvRecords[0];\n\n    //vacate keys from main array\n    var newArr = csvRecords.slice(1, csvRecords.length);\n\n    var formatted = [],\n      data = newArr,\n      cols = keys,\n      l = cols.length;\n    for (var i = 0; i < data.length; i++) {\n      var d = data[i],\n        o = {};\n      for (var j = 0; j < l; j++)\n        o[cols[j]] = d[j];\n      formatted.push(o);\n\n    }\n\n    this.jsondata = JSON.stringify(formatted);\n    console.log(data, \"test\")\n    this.jsonObj = JSON.parse(this.jsondata);\n    this.tempdata = this.jsonObj;\n    this.jsonObj2 = JSON.parse(this.jsondata);\n    this.jsonObj.splice(0, this.jsonObj.length - this.n);\n    this.jsonObj2.splice(0, this.jsonObj.length - this.n);\n    console.log(this.jsonObj, \"datatest\");\n    console.log(this.jsonObj, \"datatest\");\n    console.log(this.forcast.getLocation(), \"datatest2\");\n  }\n\n\n\n  barChartPopulation() {\n    var d = [];\n    for (var i = 0; i < this.jsonObj.length; i++) {\n      d.push(Number(this.jsonObj[i].TotFactoredVolume))\n\n    }\n\n    var n5 = []\n    var maxd = new Date(this.jsonObj[this.jsonObj.length - 1].date)\n    var maxds: string = maxd.getFullYear() + \"-\" + (maxd.getMonth() + 1) + \"-\" + maxd.getDate();\n    for (var i = 0; i < this.jsonObj.length; i++) {\n      n5.push(new Date(this.jsonObj[i].date))\n    }\n\n    console.log(Date.UTC(2017, 0), \"kg2\")\n\n    Highcharts.chart('barChart', {\n      chart: {\n        type: 'line'\n      },\n\n      title: {\n        text: ''\n      },\n      xAxis: {\n        categories: n5,\n        type: 'datetime',\n        plotLines: [{\n          color: \"blue\",\n          width: 2,\n          value: this.jsonObj2.length - 1\n        }],\n\n      },\n\n      tooltip: {\n        valueSuffix: ''\n      },\n\n\n      series: [{\n        type: undefined,\n        name: 'data',\n        //  pointStart: Date.UTC(2016, 11,0,0,0),\n        //  pointIntervalUnit: 'year',\n        data: d,\n        zoneAxis: 'x',\n        zones: [{\n          value: this.jsonObj2.length - 1,\n          color: \"orange\"\n        },\n        {\n\n          value: this.jsonObj.length - 1,\n          color: \"gray\"\n        }\n\n\n        ]\n      },\n      {\n        type: undefined,\n        name: 'yhat lower',\n        pointStart: this.jsonObj2.length - 1,\n        //  pointIntervalUnit: 'year',\n        data: this.temp2,\n        zoneAxis: 'x',\n        color: 'green'\n      },\n      {\n        type: undefined,\n        name: 'yhat upper',\n        pointStart: this.jsonObj2.length - 1,\n        //  pointIntervalUnit: 'year',\n        data: this.temp3,\n        zoneAxis: 'x',\n        color: 'red'\n      }\n\n\n      ],\n\n    });\n  }\n\n}","<html lang=\"en\">\n\n    <head>\n      <meta charset=\"UTF-8\">\n    \n      <meta name=\"viewport\" content=\"width=\n      , initial-scale=1.0\">\n      <title>Document</title>\n    </head>\n    \n    <body >\n      <div class=\"title container-fluid\">\n        <div class=\"col-sm-3 col-md-6 col-lg-7 title_text\">Time series forecasting</div>\n        <div class=\"col-5 title_date\"><span>Date: {{today | date:'dd-MM-yyyy '}}</span> <span\n            style=\"padding-left: 112px;\">Time: {{today | date:'hh:mm:ss a':'+0530'}}</span> </div>\n      </div>\n      <div class=\"charts col-lg-10\">\n        <!-- {{userforms | json}} -->\n        <!-- <h2>{{ title }}</h2> -->\n        <!-- {{testing | json}} -->\n    <br>\n        <div >\n        \n            <!-- <input type=\"number\" class=\"ml-2\" [(ngModel)]=\"n\" style=\"margin-left: 12px;width: 49px;\"/></p><br> -->\n          <input type=\"file\"  name=\"FileUpload\"  id=\"csvFileUpload\" (change)=\"fileChangeListener($event)\"\n            accept=\".csv\" #fileImportInput/>\n          \n          <!-- <svg width=\"1800\" height=\"900\"  style=\"fill:none\"></svg> -->\n          <div class=\"container\">\n            <!-- <h3 class=\"mt-2\">{{ title }}</h3> -->\n            <div class=\"row\">\n              <div class=\"col-sm\" style=\"margin: 30px;\">\n                <div id=\"barChart\" style=\"min-width: 310px; max-width: 1000px; height: 400px; margin: 0 auto\"></div>\n                <h5 class=\"card-title text-center\"></h5>\n              </div>\n              \n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-2\" style=\"margin-left: 0%;position: relative;\n      left: -37px;\">\n        <div class=\"side_panel col-lg-2\">\n            <div style=\"margin-top: 50px;\">\n              <form #userform=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n                <mat-form-field style=\"font-size: 18px!important;\">\n                  <mat-label style=\"font-size: 20px;\">locations</mat-label>\n                  <mat-select [(ngModel)]=\"LocationValue\"  [(ngModel)]=\"userforms.location\" multiple  name=\"locations\" >\n                    <mat-option value=\"Banjara hills\">Banjara hills</mat-option>\n                    <mat-option value=\"KPHB\">KPHB</mat-option>\n                    <mat-option value=\"Panjagutta\">Panjagutta</mat-option>\n                  </mat-select>\n        \n                </mat-form-field>\n                <mat-form-field style=\"font-size: 18px!important;\">\n        \n                  <mat-label style=\"font-size: 20px;\">Products</mat-label>\n                  <mat-select [(ngModel)]=\"ProductValue\"  [(ngModel)]=\"userforms.product\"  multiple name=\"products\">\n                    <mat-option value=\"100 ML Butterscotch\">ML Butterscotch</mat-option>\n                    <mat-option value=\"250 ML Cornetto Snekers\">Cornetto Snekers</mat-option>\n                  </mat-select>\n                </mat-form-field>\n                  \n                <p style=\"margin-top: 50px;font-size: 14px;  font-weight: 700;display: block;\n                width: max-content\"><span>Future Forcast Weeks</span></p>\n                <input type=\"text\" [(ngModel)]=\"userforms.data\" [(ngModel)]=\"week\" name=\"weeks\">\n                <!-- <p style=\"margin-top: 50px;font-size: 15px;  font-weight: 700;\">confidence interval</p>\n                <input type=\"text\"  name=\"interval\"> -->\n                <br><br>\n                <button  class=\"btn btn-primary text-center\" type=\"submit\" style=\"margin-top: 15vh;\">Submit</button>\n                </form>\n            </div>\n          </div>\n      </div>\n    </body>\n    \n    </html>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product2',\n  templateUrl: './product2.component.html',\n  styleUrls: ['./product2.component.css']\n})\nexport class Product2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>product2 works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}